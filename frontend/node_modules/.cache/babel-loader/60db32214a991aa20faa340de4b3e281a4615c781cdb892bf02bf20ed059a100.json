{"ast":null,"code":"export const formatCurrency = number => {\n  if (number === null || number === undefined) {\n    return '';\n  }\n\n  // Convertir a string con 2 decimales fijos\n  const fixedNumber = Number(number).toFixed(2);\n\n  // Separar la parte entera de la decimal\n  let [integerPart, decimalPart] = fixedNumber.split('.');\n\n  // Añadir separadores de miles a la parte entera\n  integerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n\n  // Unir la parte entera y la decimal con una coma\n  return `${integerPart},${decimalPart}`;\n};","map":{"version":3,"names":["formatCurrency","number","undefined","fixedNumber","Number","toFixed","integerPart","decimalPart","split","replace"],"sources":["/Users/KASHA/verifypay/frontend/src/utils/formatting.js"],"sourcesContent":["export const formatCurrency = (number) => {\n  if (number === null || number === undefined) {\n    return '';\n  }\n\n  // Convertir a string con 2 decimales fijos\n  const fixedNumber = Number(number).toFixed(2);\n  \n  // Separar la parte entera de la decimal\n  let [integerPart, decimalPart] = fixedNumber.split('.');\n\n  // Añadir separadores de miles a la parte entera\n  integerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n\n  // Unir la parte entera y la decimal con una coma\n  return `${integerPart},${decimalPart}`;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,MAAM,IAAK;EACxC,IAAIA,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKC,SAAS,EAAE;IAC3C,OAAO,EAAE;EACX;;EAEA;EACA,MAAMC,WAAW,GAAGC,MAAM,CAACH,MAAM,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC;;EAE7C;EACA,IAAI,CAACC,WAAW,EAAEC,WAAW,CAAC,GAAGJ,WAAW,CAACK,KAAK,CAAC,GAAG,CAAC;;EAEvD;EACAF,WAAW,GAAGA,WAAW,CAACG,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;;EAE/D;EACA,OAAO,GAAGH,WAAW,IAAIC,WAAW,EAAE;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}