{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Configuración global de axios\naxios.defaults.baseURL = API_BASE_URL;\n\n// Interceptor para manejar errores globalmente\naxios.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expirado o inválido\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Servicios de autenticación\nexport const authService = {\n  login: async (email, password) => {\n    const response = await axios.post('/api/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  register: async (username, email, password) => {\n    const response = await axios.post('/api/register', {\n      username,\n      email,\n      password\n    });\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Servicios para estados de cuenta\nexport const statementService = {\n  uploadStatement: async file => {\n    const formData = new FormData();\n    formData.append('statement', file);\n    const response = await axios.post('/api/upload-statement', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  getStatements: async () => {\n    const response = await axios.get('/api/statements');\n    return response.data;\n  },\n  getStatementTransactions: async id => {\n    const response = await axios.get(`/api/statements/${id}/transactions`);\n    return response.data;\n  },\n  getStatementById: async id => {\n    const response = await axios.get(`/api/statements/${id}`);\n    return response.data;\n  }\n};\n\n// Servicios para verificación de pagos\nexport const paymentService = {\n  verifyPayment: async (paymentImage, statementId) => {\n    const formData = new FormData();\n    formData.append('payment', paymentImage);\n    formData.append('statementId', statementId);\n    const response = await axios.post('/api/verify-payment', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  getVerifications: async () => {\n    const response = await axios.get('/api/verifications');\n    return response.data;\n  },\n  getVerificationById: async id => {\n    const response = await axios.get(`/api/verifications/${id}`);\n    return response.data;\n  }\n};\n\n// Servicios para dashboard\nexport const dashboardService = {\n  getStats: async () => {\n    const response = await axios.get('/api/dashboard');\n    return response.data;\n  },\n  getRecentActivity: async () => {\n    const response = await axios.get('/api/dashboard/activity');\n    return response.data;\n  }\n};\n\n// Servicios para archivos\nexport const fileService = {\n  downloadFile: async filePath => {\n    const response = await axios.get(`/api/files/download`, {\n      params: {\n        path: filePath\n      },\n      responseType: 'blob'\n    });\n    return response.data;\n  },\n  getFileUrl: filePath => {\n    return `${API_BASE_URL}/uploads/${filePath}`;\n  }\n};\n\n// Utilidades\nexport const apiUtils = {\n  setAuthToken: token => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  },\n  handleApiError: error => {\n    if (error.response) {\n      // Error del servidor\n      return error.response.data.error || 'Error del servidor';\n    } else if (error.request) {\n      // Error de red\n      return 'Error de conexión';\n    } else {\n      // Error de configuración\n      return 'Error inesperado';\n    }\n  }\n};\nconst apiServices = {\n  authService,\n  statementService,\n  paymentService,\n  dashboardService,\n  fileService,\n  apiUtils\n};\nexport default apiServices;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","defaults","baseURL","interceptors","response","use","error","_error$response","status","localStorage","removeItem","headers","common","window","location","href","Promise","reject","authService","login","email","password","post","data","register","username","logout","statementService","uploadStatement","file","formData","FormData","append","getStatements","get","getStatementTransactions","id","getStatementById","paymentService","verifyPayment","paymentImage","statementId","getVerifications","getVerificationById","dashboardService","getStats","getRecentActivity","fileService","downloadFile","filePath","params","path","responseType","getFileUrl","apiUtils","setAuthToken","token","handleApiError","request","apiServices"],"sources":["/Users/KASHA/verifypay/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Configuración global de axios\naxios.defaults.baseURL = API_BASE_URL;\n\n// Interceptor para manejar errores globalmente\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expirado o inválido\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Servicios de autenticación\nexport const authService = {\n  login: async (email, password) => {\n    const response = await axios.post('/api/login', { email, password });\n    return response.data;\n  },\n\n  register: async (username, email, password) => {\n    const response = await axios.post('/api/register', { username, email, password });\n    return response.data;\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Servicios para estados de cuenta\nexport const statementService = {\n  uploadStatement: async (file) => {\n    const formData = new FormData();\n    formData.append('statement', file);\n    \n    const response = await axios.post('/api/upload-statement', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    \n    return response.data;\n  },\n\n  getStatements: async () => {\n    const response = await axios.get('/api/statements');\n    return response.data;\n  },\n\n  getStatementTransactions: async (id) => {\n    const response = await axios.get(`/api/statements/${id}/transactions`);\n    return response.data;\n  },\n\n  getStatementById: async (id) => {\n    const response = await axios.get(`/api/statements/${id}`);\n    return response.data;\n  }\n};\n\n// Servicios para verificación de pagos\nexport const paymentService = {\n  verifyPayment: async (paymentImage, statementId) => {\n    const formData = new FormData();\n    formData.append('payment', paymentImage);\n    formData.append('statementId', statementId);\n    \n    const response = await axios.post('/api/verify-payment', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    \n    return response.data;\n  },\n\n  getVerifications: async () => {\n    const response = await axios.get('/api/verifications');\n    return response.data;\n  },\n\n  getVerificationById: async (id) => {\n    const response = await axios.get(`/api/verifications/${id}`);\n    return response.data;\n  }\n};\n\n// Servicios para dashboard\nexport const dashboardService = {\n  getStats: async () => {\n    const response = await axios.get('/api/dashboard');\n    return response.data;\n  },\n\n  getRecentActivity: async () => {\n    const response = await axios.get('/api/dashboard/activity');\n    return response.data;\n  }\n};\n\n// Servicios para archivos\nexport const fileService = {\n  downloadFile: async (filePath) => {\n    const response = await axios.get(`/api/files/download`, {\n      params: { path: filePath },\n      responseType: 'blob'\n    });\n    return response.data;\n  },\n\n  getFileUrl: (filePath) => {\n    return `${API_BASE_URL}/uploads/${filePath}`;\n  }\n};\n\n// Utilidades\nexport const apiUtils = {\n  setAuthToken: (token) => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  },\n\n  handleApiError: (error) => {\n    if (error.response) {\n      // Error del servidor\n      return error.response.data.error || 'Error del servidor';\n    } else if (error.request) {\n      // Error de red\n      return 'Error de conexión';\n    } else {\n      // Error de configuración\n      return 'Error inesperado';\n    }\n  }\n};\n\nconst apiServices = {\n  authService,\n  statementService,\n  paymentService,\n  dashboardService,\n  fileService,\n  apiUtils\n};\n\nexport default apiServices;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}